{"version":3,"sources":["images/genericLogo.png","JoblyApi.js","JobCard.js","SearchForm.js","Jobs.js","CompanyCard.js","Companies.js","Company.js","HomePage.js","loginForm.js","ProfileForm.js","Routes.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_URL","process","REACT_APP_BASE_URL","JoblyApi","endpoint","paramsOrData","verb","token","localStorage","getItem","_token","console","debug","axios","Object","defineProperty","method","url","concat","data","error","_context","t0","response","message","Array","isArray","username","password","this","request","setItem","first_name","last_name","email","log","handle","res","company","query","companies","jobs","user","photo_url","jobId","state","JobCard","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","applied","handleClick","bind","assertThisInitialized","handleApply","currentUser","id","setState","applyToJob","isApplied","handleUpdate","react_default","a","createElement","className","title","salary","toLocaleString","equity","onClick","type","disabled","Component","SearchForm","search","handleChange","handleSubmit","evt","preventDefault","handleSearch","target","name","value","onSubmit","htmlFor","onChange","aria-describedby","placeholder","currentPage","Jobs","searchJobs","getAllJobs","_context2","t3","_this2","src_SearchForm","length","map","j","src_JobCard","key","find","job","defaultProps","CompanyCard","Link","to","src","logo","alt","desc","genericLogo","Companies","searchCompanies","getAllCompanies","c","src_CompanyCard_0","description","logo_url","Company","num_employees","match","params","companyHandle","getCompany","objectSpread","HomePage","loggedInHomepage","loggedOutHomepage","isLoggedIn","LoginForm","loginActive","signUpActive","handleSubmitLogin","handleSubmitSignUp","_this$state","handleLogin","_this$state2","handleSignUp","history","replace","loginForm","signUpForm","role","aria-label","ProfileForm","hasUpdated","handleProfileUpdate","updateUser","ProtectedRoute","Redirect","Route","Routes","Switch","exact","path","render","src_loginForm","assign","Routes_ProtectedRoute","src_Companies","src_Company","src_ProfileForm","src_Jobs","src_HomePage","NavBar","activeStyle","fontWeight","NavLink","handleLogout","App","updateCurrentUser","decode","getUser","signUp","login","_this3","_this4","clear","src_NavBar_0","src_Routes","addJobToUser","withRouter","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0a00e91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/genericLogo.94f9a559.png\";","import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n\nclass JoblyApi {\n  static async request(endpoint, paramsOrData = {}, verb = 'get') {\n    const token = localStorage.getItem('token');\n    paramsOrData._token = token;\n\n    console.debug('API Call:', endpoint, paramsOrData, verb);\n\n    try {\n      return (await axios({\n        method: verb,\n        url: `${BASE_URL}/${endpoint}`,\n        [verb === 'get' ? 'params' : 'data']: paramsOrData\n      })).data;\n      // axios sends query string data via the \"params\" key,\n      // and request body data via the \"data\" key,\n      // so the key we need depends on the HTTP verb\n    } catch (err) {\n      console.error('API Error:', err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async login(username, password) {\n    let token = await this.request('login', { username, password }, 'post');\n    localStorage.setItem('token', token.token);\n  }\n\n  static async signUp(username, password, first_name, last_name, email) {\n    console.log({ username, password, first_name, last_name, email });\n    let token = await this.request(\n      'users',\n      {\n        username,\n        password,\n        first_name,\n        last_name,\n        email\n      },\n      'post'\n    );\n    localStorage.setItem('token', token.token);\n  }\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies(query = {}) {\n    let res = await this.request(`companies`, query);\n    return res.companies;\n  }\n\n  static async getAllJobs(query = {}) {\n    let res = await this.request(`jobs`, query);\n    return res.jobs;\n  }\n\n  static async getJobsForCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company.jobs;\n  }\n\n  // get user info\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async updateUser(\n    username,\n    password,\n    first_name,\n    last_name,\n    email,\n    photo_url\n  ) {\n    let res = await this.request(\n      `users/${username}`,\n      { password, first_name, last_name, email, photo_url },\n      'patch'\n    );\n    return res.user;\n  }\n\n  // post apply to job\n  static async applyToJob(jobId) {\n    let res = await this.request(\n      `jobs/${jobId}/apply`,\n      { state: 'applied' },\n      'post'\n    );\n    return res;\n  }\n}\n\nexport default JoblyApi;\n","import React, { Component } from 'react';\nimport JoblyApi from './JoblyApi';\n\nclass JobCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applied: this.props.applied\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleApply = this.handleApply.bind(this);\n  }\n\n  handleClick() {\n    console.log(this.props.currentUser);\n    this.handleApply(this.props.id);\n    this.setState(\n      { applied: true }\n      // get curr user and respectivejobs and add new job\n    );\n  }\n\n  async handleApply(jobId) {\n    try {\n      await JoblyApi.applyToJob(jobId);\n      this.setState({\n        isApplied: true\n      });\n      this.props.handleUpdate();\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log('error msg', error);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"JobCard card my-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title d-flex justify-content-between\">\n            <div>{this.props.title}</div>\n            <p>Salary: {this.props.salary.toLocaleString()}</p>\n            <p>Equity: {this.props.equity}</p>\n          </h5>\n        </div>\n        <button\n          onClick={this.handleClick}\n          type=\"button\"\n          className=\"btn btn-danger\"\n          disabled={this.state.applied}\n        >\n          {this.state.applied ? 'Applied' : 'Apply'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default JobCard;\n","import React, { Component } from 'react';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { companies: [], search: '', jobs: [] };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    console.log('this is the SEARCH TERM', this.state.search);\n    this.props.handleSearch({ search: this.state.search });\n    this.setState({ companies: [], search: '', jobs: [] });\n  }\n\n  // update this to search on keyboard change\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchForm mt-5\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group input-group\">\n            <label htmlFor=\"searchForm\" />\n            <input\n              onChange={this.handleChange}\n              name=\"search\"\n              value={this.state.search}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"searchForm\"\n              aria-describedby=\"search\"\n              placeholder={`Search ${this.props.currentPage}...`}\n            />\n            <span className=\"input-group-btn\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </span>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\nimport JobCard from './JobCard';\nimport SearchForm from './SearchForm';\nimport JoblyApi from './JoblyApi';\n\nclass Jobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { jobs: [] };\n    this.searchJobs = this.searchJobs.bind(this);\n  }\n  static defaultProps = {};\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        jobs: await JoblyApi.getAllJobs()\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  async searchJobs(query) {\n    try {\n      console.log('QUERY inside jobs component', query);\n      this.setState({\n        jobs: await JoblyApi.getAllJobs(query)\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log('error msg', error);\n    }\n  }\n\n  render() {\n    // will need to pass a onSubmit handler to the searchform for generating a request\n    return (\n      <div className=\"Jobs\">\n        <SearchForm currentPage=\"jobs\" handleSearch={this.searchJobs} />\n        {this.state.jobs.length > 0 ? (\n          this.state.jobs.map(j => (\n            <JobCard\n              handleApply={this.props.handleApply}\n              handleUpdate={this.props.handleUpdate}\n              key={j.id}\n              title={j.title}\n              salary={j.salary}\n              equity={j.equity}\n              id={j.id}\n              currentUser={this.props.currentUser}\n              applied={this.props.currentUser.jobs.find(job => job.id === j.id)}\n            />\n          ))\n        ) : (\n          <h3>Loading jobs...</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Jobs;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport genericLogo from './images/genericLogo.png';\nimport './CompanyCard.css';\n\nclass CompanyCard extends Component {\n  static defaultProps = {\n    logo: genericLogo\n  };\n  render() {\n    // create CSS style sheet and remove inline style\n    // ** Added card title h5, took out styling on card div\n    // could destructure this.props to avoid repetition\n    return (\n      <Link to={`/companies/${this.props.handle}`}>\n        <div className=\"CompanyCard card \">\n          <div className=\"card-body\">\n            <h5 className=\"card-title d-flex justify-content-between\">\n              <span>{this.props.name}</span>\n              <img\n                className=\"company-logo\"\n                src={this.props.logo}\n                // style={{ width: '50px', contentAlign: 'right' }}\n                alt=\"company logo\"\n              />\n            </h5>\n            <p>{this.props.desc}</p>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default CompanyCard;\n","import React, { Component } from 'react';\nimport CompanyCard from './CompanyCard';\nimport SearchForm from './SearchForm';\nimport JoblyApi from './JoblyApi';\n\nclass Companies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { companies: [] };\n\n    this.searchCompanies = this.searchCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        companies: await JoblyApi.getAllCompanies()\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n\n      console.log('error msg', error);\n    }\n  }\n\n  async searchCompanies(query) {\n    try {\n      console.log('QUERY inside companies component', query);\n      this.setState({\n        companies: await JoblyApi.getAllCompanies(query)\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log('error msg', error);\n    }\n  }\n\n  render() {\n    // console.log(this.state.companies);\n    return (\n      <div className=\"Companies\">\n        <SearchForm\n          currentPage=\"companies\"\n          handleSearch={this.searchCompanies}\n        />\n        {this.state.companies.length > 0 ? (\n          this.state.companies.map(c => (\n            <CompanyCard\n              key={c.handle}\n              handle={c.handle}\n              name={c.name}\n              desc={c.description}\n              logo={c.logo_url}\n            />\n          ))\n        ) : (\n          <h3>Loading companies...</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Companies;\n","import React, { Component } from 'react';\nimport JobCard from './JobCard';\nimport JoblyApi from './JoblyApi';\n\nclass Company extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      handle: '',\n      name: '',\n      num_employees: null,\n      description: '',\n      logo_url: null,\n      jobs: []\n    };\n  }\n\n  async componentDidMount() {\n    console.log('company handle:', this.props.match.params.name);\n    try {\n      const companyHandle = this.props.match.params.name;\n      const company = await JoblyApi.getCompany(companyHandle);\n\n      this.setState({\n        ...company\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    // could destructure date for less repetition\n    return (\n      <div className=\"Company\">\n        <h3>{this.state.name}</h3>\n        <p>{this.state.description}</p>\n        {this.state.jobs.length > 0 ? (\n          this.state.jobs.map(j => (\n            <JobCard\n              handleApply={this.props.handleApply}\n              handleUpdate={this.props.handleUpdate}\n              key={j.id}\n              title={j.title}\n              salary={j.salary}\n              equity={j.equity}\n              id={j.id}\n              currentUser={this.props.currentUser}\n              applied={this.props.currentUser.jobs.find(job => job.id === j.id)}\n            />\n          ))\n        ) : (\n          <h3>Loading jobs...</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Company;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HomePage extends Component {\n  static defaultProps = {};\n  render() {\n    let loggedInHomepage = <h3>Welcome Back</h3>;\n    let loggedOutHomepage = (\n      <Link to=\"/login\">\n        <button className=\"btn btn-primary\" type=\"button\">\n          Login\n        </button>\n      </Link>\n    );\n    return (\n      <div className=\"HomePage mt-4\">\n        <h1 className=\"pt-3\">Jobly</h1>\n        <p>All the jobs in one, convenient place. </p>\n        {this.props.isLoggedIn ? loggedInHomepage : loggedOutHomepage}\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      loginActive: true,\n      signUpActive: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitLogin = this.handleSubmitLogin.bind(this);\n    this.handleSubmitSignUp = this.handleSubmitSignUp.bind(this);\n  }\n\n  handleSubmitLogin(evt) {\n    evt.preventDefault();\n    const { username, password } = this.state;\n    this.props.handleLogin(username, password);\n    this.setState({ username: '', password: '' });\n  }\n\n  handleSubmitSignUp(evt) {\n    evt.preventDefault();\n    const { username, password, first_name, last_name, email } = this.state;\n\n    this.props.handleSignUp(username, password, first_name, last_name, email);\n    // resets form\n    this.setState({\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      email: ''\n    });\n    this.props.history.replace('/jobs');\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"card mt-3\">\n        <div className=\"card-body p-1.25\">\n          <form onSubmit={this.handleSubmitLogin}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Username</label>\n              <input\n                onChange={this.handleChange}\n                name=\"username\"\n                value={this.state.username}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter username\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                onChange={this.handleChange}\n                name=\"password\"\n                value={this.state.password}\n                type=\"password\"\n                className=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n\n    const signUpForm = (\n      <div className=\"card mt-3\">\n        <div className=\"card-body p-1.25\">\n          <form onSubmit={this.handleSubmitSignUp}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Username</label>\n              <input\n                onChange={this.handleChange}\n                name=\"username\"\n                value={this.state.username}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter username\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                onChange={this.handleChange}\n                name=\"password\"\n                value={this.state.password}\n                type=\"password\"\n                className=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"examplefirst_name\">First name</label>\n              <input\n                onChange={this.handleChange}\n                name=\"first_name\"\n                value={this.state.first_name}\n                type=\"first_name\"\n                className=\"form-control\"\n                id=\"exampleInputfirst_name1\"\n                placeholder=\"First Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"examplelast_name\">Last Name</label>\n              <input\n                onChange={this.handleChange}\n                name=\"last_name\"\n                value={this.state.last_name}\n                type=\"last_name\"\n                className=\"form-control\"\n                id=\"exampleInputlast_name1\"\n                placeholder=\"Last Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleemail\">Email</label>\n              <input\n                onChange={this.handleChange}\n                name=\"email\"\n                value={this.state.email}\n                type=\"email\"\n                className=\"form-control\"\n                id=\"exampleInputemail1\"\n                placeholder=\"Email\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n\n    return (\n      <div>\n        <div\n          className=\"btn-group mr-auto mt-3\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            onClick={() =>\n              this.setState({ loginActive: true, signUpActive: false })\n            }\n            type=\"button\"\n            className=\"btn btn-secondary\"\n          >\n            Login\n          </button>\n          <button\n            onClick={() =>\n              this.setState({ loginActive: false, signUpActive: true })\n            }\n            type=\"button\"\n            className=\"btn btn-secondary\"\n          >\n            Sign up\n          </button>\n        </div>\n        {this.state.loginActive ? loginForm : signUpForm}\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport JoblyApi from './JoblyApi';\n\nclass ProfileForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      first_name: this.props.first_name,\n      last_name: this.props.last_name,\n      email: this.props.email,\n      photo_url: 'https://www.image.com',\n      hasUpdated: false\n    };\n    this.handleProfileUpdate = this.handleProfileUpdate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  async handleProfileUpdate(evt) {\n    evt.preventDefault();\n    let { password, first_name, last_name, email, photo_url } = this.state;\n    try {\n      const user = await JoblyApi.updateUser(\n        this.props.currentUser.username,\n        password,\n        first_name,\n        last_name,\n        email,\n        photo_url\n      );\n      console.log(user);\n      this.setState({ hasUpdated: true });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n  render() {\n    // console.log('curr user in prof', this.props.currentUser);\n    return (\n      <div className=\"card\">\n        <div className=\"card-body p-1.25\">\n          <form onSubmit={this.handleProfileUpdate}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Username</label>\n              <p className=\"form-control-plaintext\">\n                {this.props.currentUser.username}\n              </p>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"examplefirst_name\">First name</label>\n              <input\n                onChange={this.handleChange}\n                name=\"first_name\"\n                value={this.state.first_name}\n                type=\"first_name\"\n                className=\"form-control\"\n                id=\"exampleInputfirst_name1\"\n                placeholder={this.props.currentUser.first_name}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"examplelast_name\">Last Name</label>\n              <input\n                onChange={this.handleChange}\n                name=\"last_name\"\n                value={this.state.last_name}\n                type=\"last_name\"\n                className=\"form-control\"\n                id=\"exampleInputlast_name1\"\n                placeholder={this.props.currentUser.last_name}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleemail\">Email</label>\n              <input\n                onChange={this.handleChange}\n                name=\"email\"\n                value={this.state.email}\n                type=\"email\"\n                className=\"form-control\"\n                id=\"exampleInputemail1\"\n                placeholder={this.props.currentUser.email}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleemail\">Photo URL</label>\n              <input\n                onChange={this.handleChange}\n                name=\"photo_url\"\n                value={this.state.photo_url}\n                type=\"uri\"\n                className=\"form-control\"\n                id=\"photo_url\"\n                placeholder={this.props.currentUser.photo_url}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Re-enter Password</label>\n              <input\n                onChange={this.handleChange}\n                name=\"password\"\n                value={this.state.password}\n                type=\"password\"\n                className=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Save Changes\n            </button>\n            {this.state.hasUpdated ? (\n              <div className=\"alert alert-success fade show mt-3\" role=\"alert\">\n                {this.props.currentUser.username} has successfully updated!\n              </div>\n            ) : (\n              ''\n            )}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Jobs from './Jobs';\nimport Companies from './Companies';\nimport Company from './Company';\nimport HomePage from './HomePage';\nimport LoginForm from './loginForm';\nimport ProfileForm from './ProfileForm';\n\nclass ProtectedRoute extends Component {\n  render() {\n    // console.log(this.props);\n    if (this.props.isLoggedIn === false) {\n      return <Redirect to=\"/login\" />;\n    } else {\n      return <Route {...this.props} />;\n    }\n  }\n}\n\nclass Routes extends Component {\n  static defaultProps = {};\n  render() {\n    return (\n      <div className=\"Routes\">\n        <Switch>\n          {/* if logged-out, render login */}\n          <Route\n            exact\n            path=\"/login\"\n            render={props => (\n              <LoginForm\n                {...props}\n                handleLogin={this.props.handleLogin}\n                handleSignUp={this.props.handleSignUp}\n              />\n            )}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/companies\"\n            render={() => <Companies />}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/companies/:name\"\n            render={props => (\n              <Company\n                {...props}\n                currentUser={this.props.currentUser}\n                handleUpdate={this.props.handleUpdate}\n              />\n            )}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/profile\"\n            render={props => (\n              <ProfileForm {...props} currentUser={this.props.currentUser} />\n            )}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n\n          <ProtectedRoute\n            exact\n            path=\"/jobs\"\n            render={() => (\n              <Jobs\n                currentUser={this.props.currentUser}\n                handleUpdate={this.props.handleUpdate}\n              />\n            )}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/profile\"\n            render={() => <h1>This will render the Profile Component</h1>}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <HomePage isLoggedIn={this.props.isLoggedIn} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavBar.css';\n\nclass NavBar extends Component {\n  static defaultProps = {};\n\n  render() {\n    const activeStyle = {\n      fontWeight: 'bold'\n    };\n    if (this.props.isLoggedIn) {\n      return (\n        <nav className=\"NavBar navbar navbar-expand-lg navbar-primary border-bottom\">\n          <NavLink\n            activeStyle={activeStyle}\n            className=\"navbar-brand navbar-nav mr-auto\"\n            exact\n            to=\"/\"\n          >\n            Jobly\n          </NavLink>\n\n          <div className=\"navbar\" id=\"navbarText\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink\n                  activeStyle={activeStyle}\n                  className=\"nav-link\"\n                  to=\"/companies\"\n                >\n                  Companies <span className=\"sr-only\" />\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  activeStyle={activeStyle}\n                  className=\"nav-link\"\n                  to=\"/jobs\"\n                >\n                  Jobs\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  activeStyle={activeStyle}\n                  className=\"nav-link\"\n                  to=\"/profile\"\n                >\n                  Profile\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  activeStyle={activeStyle}\n                  className=\"nav-link\"\n                  to=\"/logout\"\n                  onClick={this.props.handleLogout}\n                >\n                  Log out\n                  {/* HANDLE CLICK on this NavLink to wipe local storage and send back to / */}\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"NavBar navbar navbar-expand-lg navbar-primary border-bottom\">\n          <NavLink\n            activeStyle={activeStyle}\n            className=\"navbar-brand navbar-nav mr-auto\"\n            exact\n            to=\"/\"\n          >\n            Jobly\n          </NavLink>\n          <div className=\"navbar\" id=\"navbarText\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink\n                  activeStyle={activeStyle}\n                  className=\"nav-link\"\n                  to=\"/login\"\n                >\n                  Log In <span className=\"sr-only\" />\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      );\n    }\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport Routes from './Routes';\nimport NavBar from './NavBar';\nimport JoblyApi from './JoblyApi';\nimport { withRouter } from 'react-router-dom';\nimport decode from 'jwt-decode';\n// import { getCompany, getAllCompanies } from './JoblyApi';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: !!localStorage.getItem('token'),\n      error: false,\n      currentUser: {\n        username: '',\n        first_name: '',\n        last_name: '',\n        photo_url: '',\n        email: '',\n        jobs: []\n      }\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateCurrentUser = this.updateCurrentUser.bind(this);\n  }\n\n  async componentDidMount() {\n    // decode token\n    if (this.state.isLoggedIn) {\n      let token = localStorage.getItem('token');\n      let username = decode(token).username;\n\n      this.setState({ currentUser: await JoblyApi.getUser(username) });\n    }\n  }\n\n  async handleSignUp(username, password, first_name, last_name, email) {\n    try {\n      await JoblyApi.signUp(username, password, first_name, last_name, email);\n\n      this.setState(\n        {\n          isLoggedIn: true,\n          currentUser: { username, first_name, last_name, email, photo_url: '' }\n        },\n        () => this.props.history.replace('/jobs')\n      );\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  async updateCurrentUser() {\n    const username = this.state.currentUser.username;\n    this.setState({\n      currentUser: await JoblyApi.getUser(username)\n    });\n  }\n\n  async handleLogin(username, password) {\n    try {\n      await JoblyApi.login(username, password);\n      const currentUser = await JoblyApi.getUser(username);\n\n      this.setState({ isLoggedIn: true, currentUser: currentUser }, () =>\n        this.props.history.replace('/jobs')\n      );\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  handleLogout() {\n    try {\n      localStorage.clear();\n      this.setState(\n        {\n          isLoggedIn: false,\n          currentUser: {\n            username: '',\n            first_name: '',\n            last_name: '',\n            photo_url: '',\n            email: ''\n          }\n        },\n        () => this.props.history.replace('/')\n      );\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar\n          isLoggedIn={this.state.isLoggedIn}\n          handleLogout={this.handleLogout}\n        />\n        <div className=\"body container col-6\">\n          <Routes\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={this.handleLogin}\n            handleSignUp={this.handleSignUp}\n            currentUser={this.state.currentUser}\n            addJobToUser={this.addJobToUser}\n            handleUpdate={this.updateCurrentUser}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}